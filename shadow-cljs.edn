{:deps true

 :build-defaults
 {:build-hooks [(shadow-git-inject.core/hook)]}

 :dev-http
 {8290 "target/browser-test"
  8080 "resources/public"}

 :builds
 {:main
  {:target :node-script
   :output-to "resources/main.js"
   :main main/init}

  :preload
  {:target :node-script
   :output-to "resources/preload.js"
   :main preload/init
   :hashbang false}

  :renderer
  {:target :browser
   :output-dir "resources/public/js"
   :compiler-options
   {;; Optimizations only apply when using the release command. 
    ;; Development builds are never optimized by the Closure Compiler.
    ;; https://shadow-cljs.github.io/docs/UsersGuide.html#Optimization
    :optimizations :simple
    ;; Required for bootstrap build.
    ;; https://shadow-cljs.github.io/docs/UsersGuide.html#output-wrapper
    :output-wrapper false
    :infer-externs :none
    :output-feature-set :es-next
    :closure-defines
    {config/version :shadow-git-inject/version}}
   :dev
   {:compiler-options
    {:closure-defines
     {re-frame.trace.trace-enabled? true
      day8.re-frame.tracing.trace-enabled? true}}
    :devtools
    {:preloads
     [devtools.preload
      day8.re-frame-10x.preload.react-18]}}
   :release
   {:build-options
    {:ns-aliases
     {day8.re-frame.tracing
      day8.re-frame.tracing-stubs}}}
   :modules
   {:renderer
    {:entries [renderer.core]
     :init-fn renderer.core/init}}}

  :bootstrap
  {:target :bootstrap
   :output-dir "resources/public/js/bootstrap"
   :exclude #{cljs.js}
   :entries [cljs.js user]}

  :browser-test
  {:target :browser-test
   :ns-regexp "-test$"
   :runner-ns shadow.test.browser
   :test-dir "target/browser-test"}

  :karma-test
  {:target :karma
   :ns-regexp "-test$"
   :output-to "target/karma-test.js"}}}
