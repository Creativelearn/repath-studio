{:linters {:unresolved-symbol {:exclude [(malli.core/=>)]},
           :type-mismatch {:namespaces {renderer.utils.math {clamp {:arities {3 {:args [:number :number :number],
                                                                                 :ret :number}}},
                                                             angle-dx {:arities {2 {:args [:number :number],
                                                                                    :ret :number}}},
                                                             angle-dy {:arities {2 {:args [:number :number],
                                                                                    :ret :number}}},
                                                             normalize-angle {:arities {1 {:args [:number],
                                                                                           :ret :number}}},
                                                             angle {:arities {2 {:args [:seqable :seqable],
                                                                                 :ret :number}}}},
                                        renderer.utils.bounds {from-bbox {:arities {1 {:args [:any], :ret :seqable}}},
                                                               union {:arities {:varargs {:args [{:op :rest,
                                                                                                  :spec :seqable}],
                                                                                          :ret :seqable,
                                                                                          :min-arity 0}}},
                                                               ->dimensions {:arities {1 {:args [:seqable],
                                                                                          :ret :seqable}}},
                                                               center {:arities {1 {:args [:seqable], :ret :seqable}}},
                                                               intersect? {:arities {2 {:args [:seqable :seqable],
                                                                                        :ret :boolean}}},
                                                               contained? {:arities {2 {:args [:seqable :seqable],
                                                                                        :ret :boolean}}},
                                                               contain-point? {:arities {2 {:args [:seqable :seqable],
                                                                                            :ret :boolean}}}},
                                        renderer.utils.uuid {generate {:arities {0 {:args [], :ret :keyword}}},
                                                             generate-unique {:arities {1 {:args [:fn], :ret :keyword}}}}}}}}
